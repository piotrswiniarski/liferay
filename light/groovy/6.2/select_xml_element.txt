import com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalServiceUtil
import com.liferay.portlet.dynamicdatamapping.service.DDMTemplateLocalServiceUtil
import com.liferay.portal.util.*;
import com.liferay.portal.service.ClassNameLocalServiceUtil
import com.liferay.portal.service.GroupLocalServiceUtil
import com.liferay.portlet.journal.service.JournalArticleLocalServiceUtil
import com.liferay.portlet.dynamicdatamapping.util.DDMXMLUtil
import com.liferay.portlet.journal.model.JournalArticle
import com.liferay.portal.kernel.xml.SAXReaderUtil

def trace(message) {
	outputFile << "${message}\n"
}

try{

searchable="false"

actionAdd=true

final def SCRIPT_ID = "log_suchbar_inhalt"
outputFile = new File("""${System.getProperty("liferay.home")}/out-${SCRIPT_ID}.txt""")
outputFile.getParentFile().mkdirs()
	groupName = "LUKB"
	long companyId=PortalUtil.getCompany(actionRequest).getCompanyId()
	groupId = GroupLocalServiceUtil.getGroup(companyId, groupName).getGroupId()
	long classNameId = ClassNameLocalServiceUtil.getClassNameId(JournalArticle.class.getName())
	
	structures = DDMStructureLocalServiceUtil.getClassStructures(companyId, classNameId, -1, -1)
	articleId="1149714"
	elementString = "dynamic-element"
	subElementString = "dynamic-content"
	
							jas=JournalArticleLocalServiceUtil.getArticles(groupId, articleId)
							for(ja in jas){
								isLatest=JournalArticleLocalServiceUtil.isLatestVersion(groupId, ja.getArticleId(), ja.getVersion())
								if(isLatest && ja.getContent().contains("available-locales=\"de_DE\" default-locale=\"de_DE\"")){
									if(ja.getContent().contains("dynamic-element name=\"searchable\" type=\"boolean\"")){
										trace(ja.getArticleId()+" searchable exists!");
										println(ja.getArticleId()+" searchable exists!")

										if(!actionAdd){
											document = SAXReaderUtil.read(ja.getContent());
											rootElement = document.getRootElement();
											nodes = rootElement.selectNodes("dynamic-element[@name='searchable']");
											for(node in nodes){
												rootElement.remove(node)											
											}
											content = DDMXMLUtil.formatXML(document);

											JournalArticleLocalServiceUtil.updateContent(ja.getGroupId(), ja.getArticleId(), ja.getVersion(), content);
											trace(ja.getArticleId()+" removed node because actionAdd=false");
											trace(content)
										}
										break;
									}else if(actionAdd){
										document = SAXReaderUtil.read(ja.getContent());
										newElement=SAXReaderUtil.createElement(elementString);
										newElement.addAttribute("name", "searchable");
										newElement.addAttribute("type", "boolean");
										newElement.addAttribute("index", "0");
										newElement.addAttribute("index-type", "keyword");
										newElement.addAttribute("instance-id", "bbbb");
										newSubElement=SAXReaderUtil.createElement(subElementString);
										newSubElement.addAttribute("language-id", "de_DE");
										newSubElement.addCDATA(searchable);
										newElement.add(newSubElement);
										rootElement = document.getRootElement();
										rootElement.add(newElement)
										trace(ja.getArticleId()+" old");
										trace(ja.getContent())
										trace("------------------------");
										content = DDMXMLUtil.formatXML(document);

										JournalArticleLocalServiceUtil.updateContent(ja.getGroupId(), ja.getArticleId(), ja.getVersion(), content);
										trace(ja.getArticleId()+" new");
										trace(content)
										break;
									}
								}else{
									if(isLatest){
										println(ja.getArticleId()+" does not have de_DE as default language")
									}
								}
							}
						
					

}catch(Exception e){
	println(e.getMessage())
}