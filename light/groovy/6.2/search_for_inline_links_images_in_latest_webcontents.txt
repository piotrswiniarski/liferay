import javax.servlet.http.*
import com.liferay.portal.util.PortalUtil;
import com.liferay.portal.kernel.search.*;
import com.liferay.portal.kernel.dao.orm.QueryUtil;
import com.liferay.portlet.journal.model.JournalArticle;
import com.liferay.portlet.journal.service.JournalArticleLocalServiceUtil;
import java.util.List;
import java.net.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
try{
        HttpServletRequest httpServletRequest = PortalUtil.getOriginalServletRequest(PortalUtil.getHttpServletRequest(actionRequest));
        SearchContext searchContext = SearchContextFactory.getInstance(httpServletRequest);
        BooleanQuery fullQuery = BooleanQueryFactoryUtil.create(searchContext);
        BooleanQuery searchQuery = BooleanQueryFactoryUtil.create(searchContext);

searchQuery.addRequiredTerm("entryClassName", "com.liferay.portlet.journal.model.JournalArticle");
searchQuery.addRequiredTerm("head", true);
fullQuery.add(searchQuery, BooleanClauseOccur.MUST);
searchContext.setStart(QueryUtil.ALL_POS);
searchContext.setEnd(QueryUtil.ALL_POS);
searchContext.setAttribute("paginationType", "none");
Hits hits = SearchEngineUtil.search(searchContext, fullQuery);
List<Document> docs = hits.toList();

out.println("count: "+docs.size())
company = PortalUtil.getCompany(actionRequest)
isSecure=false

portalUrl = "https://eb5-admin.lucorp.ch"

out.println("Portal URL: "+portalUrl +"\t Verify if url is correct. Required to check inline links.")
out.println("Id\tlang\tcode\turl")
for(doc in docs){
article= null
try{
article = JournalArticleLocalServiceUtil.getArticle(Long.parseLong(doc.get("groupId")), doc.get("articleId"))
}catch(Exception ex){
out.println(ex.getMessage())
}
if(article!=null){
							for(String locale: article.getAvailableLocales()){
								String content = article.getContentByLocale(locale);								
// UNCOMMENT BELOW TO SEARCH FOR LINKS/DOCUMENTS
								String regex = "\\s*(?i)href\\s*=\\s*(\"([^\"]*\")|'[^']*'|([^'\">\\s]+))";
// UNCOMMENT BELOW TO SEARCH FOR IMAGES
//								String regex = "\\s*(?i)src\\s*=\\s*(\"([^\"]*\")|'[^']*'|([^'\">\\s]+))";
								Pattern p = Pattern.compile(regex);

								Matcher m = p.matcher(content);
								int index = 0;
								while (m.find(index)) {
										int code=0
										exceptionString=""
										stringUrl = m.group(1).replaceAll("\"","")
										if(stringUrl.startsWith("/"))
										     stringUrl=portalUrl+stringUrl

//										URL url = new URL(stringUrl);
//										HttpURLConnection connection = (HttpURLConnection)url.openConnection();
//										connection.setRequestMethod("GET");
//										connection.connect();
										
//										code = connection.getResponseCode();

										out.println(article.getArticleId()+"\t"+locale+"\t"+code+"\t"+stringUrl);
										index = m.end();
								}
								

							
							}
}

}
}catch(Exception e){
out.println(e.getMessage())
}